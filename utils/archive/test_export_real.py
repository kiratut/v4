"""
–†–µ–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å—Ö–µ–º–æ–π –ë–î
"""

import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from core.export import VacancyExporter

def main():
    print("üöÄ –†–ï–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –≠–ö–°–ü–û–†–¢–ê")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Å–ø–æ—Ä—Ç–µ—Ä
    exporter = VacancyExporter("data/hh_v4.sqlite3")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    count = exporter.get_vacancy_count()
    print(f"üìä –ó–∞–ø–∏—Å–µ–π –≤ –ë–î: {count}")
    
    if count == 0:
        print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞")
        return False
    
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º 100 –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Ç–µ—Å—Ç–∞
    test_file = Path("data/test_export_real.xlsx")
    print(f"üìÅ –≠–∫—Å–ø–æ—Ä—Ç –≤: {test_file}")
    
    result = exporter.export_to_excel(
        output_path=test_file,
        format_type='brief',
        limit=100
    )
    
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞:")
    print(f"   –£—Å–ø–µ—Ö: {result['success']}")
    print(f"   –ó–∞–ø–∏—Å–µ–π: {result.get('records_exported', 0)}")
    print(f"   –†–∞–∑–º–µ—Ä: {result.get('file_size_mb', 0)} –ú–ë")
    print(f"   –í—Ä–µ–º—è: {result.get('export_time_seconds', 0)} —Å–µ–∫")
    
    if result.get('errors'):
        print(f"   –û—à–∏–±–∫–∏: {result['errors']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
    if test_file.exists():
        file_size = test_file.stat().st_size
        print(f"   –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {file_size} –±–∞–π—Ç")
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        with open("utils/export_test_results.txt", "w", encoding="utf-8") as f:
            f.write(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞:\n")
            f.write(f"–£—Å–ø–µ—Ö: {result['success']}\n")
            f.write(f"–ó–∞–ø–∏—Å–µ–π: {result.get('records_exported', 0)}\n")
            f.write(f"–†–∞–∑–º–µ—Ä: {result.get('file_size_mb', 0)} –ú–ë\n")
            f.write(f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç\n")
            f.write(f"–§–∞–π–ª: {test_file}\n")
        
        print("üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: utils/export_test_results.txt")
        return True
    else:
        print("‚ùå –§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
