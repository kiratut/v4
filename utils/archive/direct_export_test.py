"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import sqlite3
import pandas as pd
from pathlib import Path

def direct_test():
    # –ü—Ä—è–º–æ–π SQL –∑–∞–ø—Ä–æ—Å –∫ –ë–î
    conn = sqlite3.connect("data/hh_v4.sqlite3")
    
    # –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å 10 –∑–∞–ø–∏—Å–µ–π
    query = """
    SELECT title, company, salary_from, salary_to, currency, 
           experience, area, published_at, url, filter_id 
    FROM vacancies 
    ORDER BY created_at DESC 
    LIMIT 10
    """
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    df = pd.read_sql_query(query, conn)
    conn.close()
    
    print(f"üìä –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(df)}")
    print(f"üìã –ö–æ–ª–æ–Ω–∫–∏: {list(df.columns)}")
    
    if len(df) > 0:
        print("\nüìÑ –ü–µ—Ä–≤—ã–µ 3 –∑–∞–ø–∏—Å–∏:")
        for i, row in df.head(3).iterrows():
            print(f"  {i+1}. {row['title'][:40]}... | {row['company']} | {row['area']}")
    
    # –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel
    output_file = Path("data/direct_test_export.xlsx")
    print(f"\nüìÅ –≠–∫—Å–ø–æ—Ä—Ç –≤: {output_file}")
    
    try:
        df.to_excel(output_file, index=False)
        
        if output_file.exists():
            size = output_file.stat().st_size
            print(f"‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {size} –±–∞–π—Ç")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
            with open("utils/direct_export_result.txt", "w", encoding="utf-8") as f:
                f.write(f"–ü—Ä—è–º–æ–π —ç–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n")
                f.write(f"–ó–∞–ø–∏—Å–µ–π: {len(df)}\n")
                f.write(f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size} –±–∞–π—Ç\n")
                f.write(f"–ü—É—Ç—å: {output_file}\n")
                f.write(f"–ö–æ–ª–æ–Ω–∫–∏: {', '.join(df.columns)}\n")
            
            return True
        else:
            print("‚ùå –§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: {e}")
        return False

if __name__ == "__main__":
    direct_test()
